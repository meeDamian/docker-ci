name: build

#on:
#  push:
#    branches:
#    - master

on: push

jobs:
  faster:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - arm
          - aarch64
          - riscv32
          - riscv64

    steps:
    - uses: actions/checkout@v1

    - name: Verify that git tag build is the same as used for build
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        GIT_VER="$(echo ${GITHUB_REF} | awk -F/ '{print $NF}')"
        FILE_VER="$(cat ./VERSION)"
        if [ "${GIT_VER}" != "${FILE_VER}" ]; then
          printf "\nVersion mismatch!  Tagged as %s, while file claims %s\n\n" "${GIT_VER}" "${FILE_VER}"
          exit 1
        fi

    - name: aaa
      run: |
        echo ${{ matrix.arch }}
        go version

    - name: Enable emulation
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
#        docker run --rm --privileged meedamian/simple-qemu:v4.1 --reset -p yes

    - name: try to run risc-v
      run: docker run carlosedp/debian:sid-riscv64 uname -a

#    - name: All
#      run: docker build -t sample-image --file Dockerfile .

#    - name: Save all build containers to files
#      run: |
#        mkdir -p out/
#        docker images sample-image --format "{{.Repository}}:{{.Tag}}" | xargs -I% sh -c "docker save % | gzip > out/%.tgz"
#        for file in $(ls out/); do
#          mv out/${file} out/$(echo ${file} | tr : -)
#        done
#
#    - name: extract file from container
#      run: |
#        ls -la
#        ID=$(docker create sample-image)
#        docker cp "${ID}:/files/" out/
#        docker rm -v "${ID}"
#
#    - name: Upload
#      uses: actions/upload-artifact@v1.0.0
#      with:
#        name: containers
#        path: out/
#
#    - name: Update README & description on Docker Hub
#      if: startsWith(github.ref, 'refs/tags/')
#      uses: meeDamian/sync-readme@v1.0.4
#      with:
#        pass: ${{ secrets.DOCKER_PASS }}
#        description: true



