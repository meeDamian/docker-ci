name: build

on:
  push:
    branches:
      - master
    tags:
      - '*'
    schedule:
      - cron: '*/5 * * * *'

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch:
          - arm
          - aarch64
          - riscv32
          - riscv64

        qemu:
          - v4.2.0
          - v4.1.1

    env:
      COMBO: "${{matrix.arch}}-${{matrix.qemu}}"

    steps:
    - uses: actions/checkout@v1

    - name: Print ENV
      run: echo "${COMBO}"

    - name: Log start time ${COMBO}
      run: touch /tmp/start

    - name: sleep
      run: sleep 1

    - name: Calculate execution time
      run: |
        START=$(date -r /tmp/start +%s)
        NOW=$(date +%s)

        DIFF=$(( NOW - START ))

        SEC=1
        MIN=$(( 60 * SEC ))
        HOUR=$(( 60 * MIN ))
        DAY=$(( 24 * HOUR ))

        secs=$(( DIFF % 60 ))
        mins=$(( $(( DIFF / MIN )) % 60 ))
        hours=$(( $(( DIFF / HOUR )) % 24 ))
        days=$(( DIFF / DAY ))

        OUT=""
        if [[ "${days}" -ne "0" ]]; then
        # Days-long jobs shouldn't happen, but 🤷🏻‍♂️
        OUT="${days}d "
        fi

        OUT="${OUT}${hours}h:${mins}m:${secs}s"

        mkdir -p stat

        echo "${OUT}" > stat/${{matrix.qemu}}-${{matrix.arch}}

    - name: Save execution time as an artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: stats
        path: stat/

  comment:
    name: Report result
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Download perf stats
        uses: actions/download-artifact@v1.0.0
        with:
          name: stats

      - name: Aggregate results
        run: |
          touch ./all-stats

          echo "| version | arm | aarch64 | riscv32 | riscv64" >> ./all-stats
          echo "|:-------:|----:|--------:|--------:|--------:" >> ./all-stats

          for ver in $(ls ./stats/* | awk -F/ '{print $NF}' | cut -d- -f1 | uniq); do
            line="| **${ver}**"

            line="${line} | $(cat ./stats/${ver}-arm | tr -d '\n')"
            line="${line} | $(cat ./stats/${ver}-aarch64 | tr -d '\n')"
            line="${line} | $(cat ./stats/${ver}-riscv32 | tr -d '\n')"
            line="${line} | $(cat ./stats/${ver}-riscv64 | tr -d '\n')"

            echo "${line}" >> ./all-stats
          done

          cat ./all-stats

          echo ::set-env name=RESULTS::"$(cat ./all-stats | sed -z 's/\n/\\n/g')"

      - uses: actions/github-script@0.4.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          debug: true
          script: |
            const user = await github.users.getAuthenticated();
            console.log(JSON.stringify(user, null, 2))

      - uses: actions/github-script@0.4.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          debug: true
          script: |
            github.issues.createComment({
              issue_number: 1,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Today's results:\n\n${process.env.RESULTS.replace(/\\n/g, '\n')}`
            })
