name: build

# Let's hope it prevents builds on package pushâ€¦
on:
  push:
    branches:
    - master
    tags:
    - '*'

jobs:
  a-job:
    name: build
    runs-on: ubuntu-latest

#    strategy:
#      matrix:
#        arch:
#          - arm
#          - aarch64
#          - riscv32
#          - riscv64

    steps:
    - uses: actions/checkout@v1

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"


    - name: Create release
      uses: meeDamian/github-release@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: 'v0.0.4-test-update'
        commitish: ${{github.sha}}
        name: ffffff
        body: ggggggg

    - name: Create release
      uses: meeDamian/github-release@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: 'v0.0.4-test-update'
        name: hhhhhhhh
        body: iiiiiiiii
        allow_override: true



#    - name: Login to Github Registry
#      run: docker login docker.pkg.github.com -u meedamian -p "${{ secrets.YET_ANOTHER_GITHUB_TOKEN }}"
#
#    - name: Push all images to Github Registry
#      run: |
#        docker pull alpine:3.10
#        docker tag alpine:3.10 docker.pkg.github.com/meedamian/trashpanda:0.0.1
#        docker push docker.pkg.github.com/meedamian/trashpanda:0.0.1
#
#    - run: ls aaa/* | sha256sum
#
#    - uses: meeDamian/github-release@1.0
#      with:
#        token: ${{ secrets.GITHUB_TOKEN }}
#        tag: v0.66.69
#        files: Dockerfile




#    - name: Enable emulation
#      run: |
#        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
##        docker run --rm --privileged meedamian/simple-qemu:v4.1 --reset -p yes
#
#    - name: try to run risc-v
#      run: docker run carlosedp/debian:sid-riscv64 uname -a

#    - name: All
#      run: docker build -t sample-image --file Dockerfile .

#    - name: Save all build containers to files
#      run: |
#        mkdir -p out/
#        docker images sample-image --format "{{.Repository}}:{{.Tag}}" | xargs -I% sh -c "docker save % | gzip > out/%.tgz"
#        for file in $(ls out/); do
#          mv out/${file} out/$(echo ${file} | tr : -)
#        done
#
#    - name: extract file from container
#      run: |
#        ls -la
#        ID=$(docker create sample-image)
#        docker cp "${ID}:/files/" out/
#        docker rm -v "${ID}"
#
#    - name: Upload
#      uses: actions/upload-artifact@v1.0.0
#      with:
#        name: containers
#        path: out/
#
#    - name: Update README & description on Docker Hub
#      if: startsWith(github.ref, 'refs/tags/')
#      uses: meeDamian/sync-readme@v1.0.4
#      with:
#        pass: ${{ secrets.DOCKER_PASS }}
#        description: true



